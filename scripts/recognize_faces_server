#!/usr/bin/env python

from face_recognition.srv import RecognizeFaces, RecognizeFacesResponse
import rospy
import cv2
import face_recognition
import pickle

import inspect

def handle_recognize_faces(req):
    image = cv2.imread(req.image_path)
    rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

    data = pickle.loads(open("/home/rishabh/workspace/catkin_ws/src/face_recognition_ros_wrapper/resources/encodings.pickle", "rb").read())

    print("Detecting faces in image: " + req.image_path)

    box = face_recognition.face_locations(rgb, model='hog')[0]
    encoding = face_recognition.face_encodings(rgb, box)[0]

    matches = face_recognition.compare_faces(data["encodings"], encoding)
    name = "Unknown"

    if True in matches:
        matchedIdxs = [i for (i, b) in enumerate(matches) if b]
        counts = {}

        for i in matchedIdxs:
            name = data["names"][i]
            counts[name] = counts.get(name, 0) + 1

        name = max(counts, key=counts.get)

    return RecognizeFacesResponse("dummy_string")

def recognize_faces_server():
    rospy.init_node("recognize_faces_server")
    s = rospy.Service('recognize_faces', RecognizeFaces, handle_recognize_faces)
    print("Ready to recognize faces")
    rospy.spin()


if __name__ == "__main__":
    recognize_faces_server()
