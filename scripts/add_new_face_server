#!/usr/bin/env python

from face_recognition_ros_wrapper.srv import RegisterNewFace, RegisterNewFaceResponse
import rospy
import cv2
import face_recognition
import pickle
from collections import defaultdict


def handle_register_new_face(req):
    success = False
    
    image = cv2.imread(req.image_path)
    rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

    data = defaultdict(list, pickle.loads(open("/home/rishabh/workspace/catkin_ws/src/face_recognition_ros_wrapper/resources/encodings.pickle", "rb").read()))
    known_names = data["names"]
    known_encodings = data["encodings"]

    print("Registering new face from given image: " + req.image_path + "\nwith name: " + req.person_name)

 #   try:
    boxes = face_recognition.face_locations(rgb, model='hog')
    encoding = face_recognition.face_encodings(rgb, boxes)[0]
        
    known_names.append(req.person_name)
    known_encodings.append(encoding)
        
    f = open("/home/rishabh/workspace/catkin_ws/src/face_recognition_ros_wrapper/resources/encodings.pickle", "wb") 
    f.write(pickle.dumps(dict(data)))
    f.close()

    success = True
#    except Exception as e:
  #      print("Something went wrong: " + str(e))

    return RegisterNewFaceResponse(success)

def register_new_face_server():
    rospy.init_node("register_new_face_server")
    s = rospy.Service('register_new_face', RegisterNewFace, handle_register_new_face)
    print("Ready to register new faces")
    rospy.spin()


if __name__ == "__main__":
    register_new_face_server()
